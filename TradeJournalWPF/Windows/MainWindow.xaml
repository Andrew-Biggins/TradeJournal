<Window x:Class="TradeJournalWPF.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TradeJournalWPF"
        xmlns:userControls="clr-namespace:TradeJournalWPF.UserControls"
        xmlns:converters="clr-namespace:TradeJournalWPF.Converters"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:validationRules="clr-namespace:TradeJournalWPF.ValidationRules"
        xmlns:viewModels="clr-namespace:TradeJournalCore.ViewModels;assembly=TradeJournalCore"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance {x:Type viewModels:MainWindowViewModel}}"
        Title="Trade Journal" Height="750" Width="1360"
        MinWidth="1360" MinHeight="750"
        Background="Black">
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style TargetType="Border">
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        <Style TargetType="{x:Type DataGridCell}" x:Key="JournalGridCellStyle">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="TextBlock.TextAlignment" Value="Right" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Center" Margin="2,1">
                    <Grid Width="12" Height="12">
                        <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" />
                        <TextBlock Foreground="White" FontWeight="Heavy" 
                                   FontSize="8" HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" TextAlignment="Center"
                                   ToolTip="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)/ErrorContent}">X</TextBlock>
                    </Grid>
                </StackPanel>
                <AdornedElementPlaceholder x:Name="ErrorAdorner" />
            </DockPanel>
        </ControlTemplate>
    </Window.Resources>
    <Border BorderBrush="White" BorderThickness="2">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="370" />
                <RowDefinition Height="58" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" MaxHeight="250"/>
                    <RowDefinition Height="auto" MaxHeight="25"/>
                    <RowDefinition Height="*" MinHeight="100" />
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,5,0">
                    <userControls:TradeFilterSelector DataContext="{Binding FilterSelector}" Margin="5"/>
                    <Border BorderBrush="White" BorderThickness="1" Margin="0,5,0,5" VerticalAlignment="Stretch">
                        <Button HorizontalAlignment="Center" Margin="5,5" VerticalAlignment="Top"
                                Height="60" Width="67" Command="{Binding AddNewTradeCommand}">
                            <TextBlock Foreground="Black" TextAlignment="Center" TextWrapping="Wrap">Add New Trade</TextBlock>
                        </Button>
                    </Border>
                </StackPanel>

                <Grid Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,0" x:Name="Grid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="18" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding ElementName=MarketColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=StrategyColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=EntryColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=StopColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=TargetColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=DirectionColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=RrrColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=OpenTimeColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=OpenLevelColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=SizeColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=CloseTimeColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=CloseLevelColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=TotalPointsColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=ProfitColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=ResultInRColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=MaeColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=MfaColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=DrawdownColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=RealisedProfitColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=UnrealisedProfitPointsColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=UnrealisedProfitCashColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=EditColumn, Path=ActualWidth}" MaxWidth="1000"/>
                        <ColumnDefinition Width="{Binding ElementName=DeleteColumn, Path=ActualWidth}" MaxWidth="1000"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="5" BorderBrush="Black" BorderThickness="0,0,0,0" Background="BurlyWood" Margin="1,0,-0.25,0">
                        <TextBlock  Text="Strategy Trade Details" FontWeight="Bold" HorizontalAlignment="Center" Background="BurlyWood" Foreground="Black"/>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="7" Grid.ColumnSpan="3" BorderBrush="Black" BorderThickness="0" Background="BurlyWood" Margin="3,0,1.5,0">
                        <TextBlock  Text="Actual Trade Open Details" FontWeight="Bold" HorizontalAlignment="Center" Background="BurlyWood" Foreground="Black"/>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="10" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="1,0,0,0" Background="BurlyWood" Margin="0.25,0,0,0">
                        <TextBlock Text="Actual Trade Close Details" FontWeight="Bold" HorizontalAlignment="Center" Background="BurlyWood" Foreground="Black"/>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="12" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="1,0,0,0" Background="BurlyWood" Margin="2,0,0,0">
                        <TextBlock Text="Profit / Loss" FontWeight="Bold" HorizontalAlignment="Center" Background="BurlyWood" Foreground="Black" FontSize="11.5"/>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="14" Grid.ColumnSpan="5" BorderBrush="Black" BorderThickness="1,0,0,0" Background="BurlyWood" Margin="1.5,0,-0.25,0">
                        <TextBlock Text="Trade Metrics" FontWeight="Bold" HorizontalAlignment="Center" Background="BurlyWood" Foreground="Black" FontSize="11.5" />
                    </Border>
                    <Border Grid.Row="0" Grid.Column="1" BorderBrush="Black" BorderThickness="1,0,0,3" Background="BurlyWood" Margin="0.5,0,2,-1">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="Account Start Size:" FontWeight="Bold" HorizontalAlignment="Right" Background="BurlyWood" Foreground="Black" FontSize="11.5" Margin="0,0,2,2"/>
                            <TextBox Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}" Width="70" Height="18" Margin="0,0,0,0.5" >
                                <TextBox.Text>
                                    <Binding Path="AccountStartSize"
                                         Mode="TwoWay"
                                         UpdateSourceTrigger="LostFocus"
                                         Converter="{converters:EmptyDoubleToStringConverter}">
                                        <Binding.ValidationRules>
                                            <validationRules:PositiveNumberValidationRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                    </Border>

                    <Border Grid.Row="0" Grid.Column="19" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="0.5,0,0,0" Background="BurlyWood" Margin="2.5,0,0,0">
                        <TextBlock Text="Unrealised Profit" FontWeight="Bold" HorizontalAlignment="Center" Background="BurlyWood" Foreground="Black" FontSize="11.5"/>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="21" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="0.5,0,0,0" Background="BurlyWood" Margin="1.75,-0.25,0,0.75">
                        <Button Command="{Binding ExportDataCommand}">
                            <TextBlock Text="Export CSV" VerticalAlignment="Top" Margin="0,-2.5,0,-0.5" Foreground="Black"/>
                        </Button>
                    </Border>

                    <Border Grid.Row="0" Grid.Column="0" BorderBrush="Black" BorderThickness="0.5,0,0,0" Background="BurlyWood" Margin="1.75,-0.45,0.5,1.5">
                        <Button Command="{Binding ClearCommand}">
                            <TextBlock Text="Clear" VerticalAlignment="Top" Margin="0,-2.5,0,-0.5" Foreground="Black"/>
                        </Button>
                    </Border>
                </Grid>

                <DataGrid Grid.Row="2"  ItemsSource="{Binding TradeManager.Trades, Mode=OneWay}" IsReadOnly="True" x:Name="JDataGrid"
                      AutoGenerateColumns="False" CanUserResizeColumns="False" CanUserReorderColumns="False" Background="Black"
                      SelectedItem="{Binding SelectedTrade}" RowHeaderWidth="0">
                    <DataGrid.Resources>
                        <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding}" 
                                                   TextAlignment="Center" Background="BurlyWood" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="BurlyWood" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="BorderThickness" Value="0,0,1,0"/>
                        </Style>
                        <Style BasedOn="{StaticResource JournalGridCellStyle}" TargetType="DataGridCell" />
                    </DataGrid.Resources>
                    <DataGrid.Columns>

                        <DataGridTextColumn Header="Market" x:Name="MarketColumn"
                                    Binding="{Binding Market.Name}" Width="0.75*" />

                        <DataGridTemplateColumn Header="Strategy" Width="3*" x:Name="StrategyColumn">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="BorderThickness" Value="0,0,3,0"/>
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource JournalGridCellStyle}">
                                    <Setter Property="BorderThickness" Value="0,0,2,0"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="Margin" Value="2,0,0,0"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderThickness" Value="0,0,2,0"/>
                                            <Setter Property="BorderBrush" Value="Black"/>
                                            <Setter Property="Margin" Value="2,0,0,0"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Strategy.Name}" ToolTip="{Binding Strategy.Name}" TextWrapping="Wrap" Margin="0,0,2,0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Entry" x:Name="EntryColumn"
                                    Binding="{Binding Levels.Entry, StringFormat=N1}" Width="0.85*" />
                        <DataGridTextColumn Header="Stop" x:Name="StopColumn"
                                        Binding="{Binding Levels.Stop}" Width="0.85*" />
                        <DataGridTextColumn Header="Target" x:Name="TargetColumn"
                                        Binding="{Binding Levels.Target}" Width="0.85*" />
                        <DataGridTextColumn Header="Long/Short" x:Name="DirectionColumn"
                                            Binding="{Binding Direction}" Width="0.55*" />
                        <DataGridTextColumn Header="RRR" x:Name="RrrColumn"
                                        Binding="{Binding RiskRewardRatio, StringFormat=N1}" Width="0.5*" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="ToolTip" Value="Risk Reward Ratio"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Open Date/Time" x:Name="OpenTimeColumn"
                                        Binding="{Binding Open.DateTime, StringFormat=dd-MM-yy HH:mm}" Width="1.5*" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter  Property="BorderThickness" Value="2,0,1,0"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource JournalGridCellStyle}">
                                    <Setter Property="BorderThickness" Value="2,0,0,0"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderThickness" Value="2,0,0,0"/>
                                            <Setter Property="BorderBrush" Value="Black"/>
                                        </Trigger>

                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Open Level" x:Name="OpenLevelColumn"
                                        Binding="{Binding Open.Level, StringFormat=N1}" Width="1*" >
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Size" x:Name="SizeColumn"
                                            Binding="{Binding Open.Size}" Width="0.5*">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="ToolTip" Value="Position Size (£ per point) "/>
                                    <Setter  Property="BorderThickness" Value="0,0,3,0"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource JournalGridCellStyle}">
                                    <Setter Property="BorderThickness" Value="0,0,2,0"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderThickness" Value="0,0,2,0"/>
                                            <Setter Property="BorderBrush" Value="Black"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Close Date/Time" x:Name="CloseTimeColumn"
                                        Binding="{Binding Close, Converter={converters:OptionalExecutionDateTimeToDateTimeConverter}, StringFormat=dd-MM-yy HH:mm}" Width="1.5*" />

                        <DataGridTextColumn Header="Close Level" x:Name="CloseLevelColumn"
                                        Binding="{Binding Close, Converter={converters:OptionalExecutionLevelToStringConverter}}" Width="1*" />

                        <DataGridTextColumn Header="Points" x:Name="TotalPointsColumn"
                                        Binding="{Binding PointsProfit, Converter={converters:OptionalDoubleToStringConverter}, StringFormat=N1}" Width="0.9*" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter  Property="BorderThickness" Value="2,0,1,0"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource JournalGridCellStyle}">
                                    <Setter Property="BorderThickness" Value="2,0,0,0"/>
                                    <Setter Property="BorderBrush" Value="Black"/>

                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderThickness" Value="2,0,0,0"/>
                                            <Setter Property="BorderBrush" Value="Black" />

                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="£" x:Name="ProfitColumn"
                                            Binding="{Binding CashProfit, Converter={converters:OptionalDoubleToStringConverter}, StringFormat=N2}" Width=".9*" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{Binding CashProfit, Converter={converters:OptionalDoubleToBrushConverter}}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Result In R" x:Name="ResultInRColumn"
                                        Binding="{Binding ResultInR, Converter={converters:OptionalDoubleToStringConverter}, StringFormat=N1}" Width="0.6*" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="BorderThickness" Value="2,0,1,0"/>
                                    <Setter Property="ToolTip" Value="Result Measured In Relation To Risk"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource JournalGridCellStyle}">
                                    <Setter Property="BorderThickness" Value="2,0,0,0"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderThickness" Value="2,0,0,0"/>
                                            <Setter Property="BorderBrush" Value="Black"/>
                                        </Trigger>

                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="MAE" x:Name="MaeColumn"
                                            Binding="{Binding MaxAdverseExcursion, Converter={converters:OptionalExcursionPointsToStringConverter}, StringFormat=N1}" Width="0.7*" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="ToolTip" Value="Maximum Adverse Excursion"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="MFA" x:Name="MfaColumn"
                                            Binding="{Binding MaxFavourableExcursion, Converter={converters:OptionalExcursionPointsToStringConverter}, StringFormat=N1}" Width="0.7*">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="ToolTip" Value="Maximum Favourable Excursion"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Drawdown" x:Name="DrawdownColumn"
                                            Binding="{Binding MaximumAdverseExcursionPercentageOfStop, Converter={converters:OptionalDoubleToStringConverter}, StringFormat=P}" Width="1*" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="ToolTip" Value="Drawdown or 'Heat'. &#x0a;&#x0a;Measured as percentage of stop/risk."/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Realised Profit %" x:Name="RealisedProfitColumn"
                                            Binding="{Binding PointsProfitPercentageOfMaximumFavourableExcursion, Converter={converters:OptionalDoubleToStringConverter}, StringFormat=P}" Width="0.82*">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="ToolTip" Value="Realised Profit Percentage. &#x0a;&#x0a;Measure of trade efficiency in relation &#x0a;to its Maximum Favourable Excursion."/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Points" x:Name="UnrealisedProfitPointsColumn"
                                            Binding="{Binding UnrealisedProfitPoints, Converter={converters:OptionalDoubleToStringConverter}, StringFormat=N1}" Width="0.8*">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="BorderThickness" Value="2,0,1,0"/>
                                    <Setter Property="ToolTip" Value="Unrealised Profit (points)"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource JournalGridCellStyle}">
                                    <Setter Property="BorderThickness" Value="2,0,0,0"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderThickness" Value="2,0,0,0"/>
                                            <Setter Property="BorderBrush" Value="Black"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="£" x:Name="UnrealisedProfitCashColumn"
                                            Binding="{Binding UnrealisedProfitCash, Converter={converters:OptionalDoubleToStringConverter}, StringFormat=N2}" Width="0.8*">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="ToolTip" Value="Unrealised Profit (£)"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                        </DataGridTextColumn>

                        <DataGridTemplateColumn Header="Edit" MinWidth="45" MaxWidth="45" x:Name="EditColumn">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter  Property="BorderThickness" Value="2,0,1,0"/>
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource JournalGridCellStyle}">
                                    <Setter Property="BorderThickness" Value="2,0,0,0"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <EventSetter Event="MouseDoubleClick"
                                                 Handler="OnEditTradeClicked"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderThickness" Value="2,0,0,0"/>
                                            <Setter Property="BorderBrush" Value="Black"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Brown" />
                                            <Setter Property="BorderBrush" Value="CornflowerBlue" />
                                            <Setter Property="BorderThickness" Value="1"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="/Icons/Edit.png" Height="35" Width="25" ToolTip="Double Click to Edit"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Delete" MinWidth="45" MaxWidth="45" x:Name="DeleteColumn">
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource JournalGridCellStyle}">
                                    <EventSetter Event="MouseDoubleClick"
                                                 Handler="OnRemoveTradeClicked"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Brown" />
                                            <Setter Property="BorderBrush" Value="CornflowerBlue" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="/Icons/Delete.png" Height="35" Width="25" ToolTip="Double Click to Delete"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <userControls:JournalTradeStats Grid.Row="1" DataContext="{Binding StrategyResultsStatsViewModel}"/>
            <oxy:PlotView Grid.Row="2" Model="{Binding Plot, Mode=OneTime}" MouseDoubleClick="OnGraphDoubleClick" Margin="0,0,20,0"
                          ToolTip="Double Click to Pop-out" Background="Black"/>
        </Grid>
    </Border>
</Window>
